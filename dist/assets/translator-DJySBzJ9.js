const i="AIzaSyDeFa7F01ERMO0I-yT6ir11X_7ovH3Gx6s",c=`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${i}`;async function d(a){const t=await fetch(c,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:a}]}]})});if(!t.ok){const n=await t.text();throw new Error(`Erreur de l'API Gemini : ${t.status} ${t.statusText} - ${n}`)}const e=await t.json();if(e.candidates&&e.candidates.length>0&&e.candidates[0].content&&e.candidates[0].content.parts&&e.candidates[0].content.parts.length>0)return e.candidates[0].content.parts[0].text;if(e.promptFeedback&&e.promptFeedback.blockReason)throw new Error(`Le prompt a été bloqué par l'API Gemini. Raison: ${e.promptFeedback.blockReason}`);return"L'API Gemini n'a pas retourné de contenu."}async function l(a,t="en",e={}){try{if(typeof ai>"u"||await ai.canCreateTextSession()==="no")throw new Error("IA locale non disponible, passage au cloud.");return(await(await ai.translator.create({model:"gemini-nano",monitor:r=>{e.onProgress&&r.addEventListener("downloadprogress",s=>{var o;(o=e.onProgress)==null||o.call(e,s.loaded)})}})).translate({text:a,to:t})).text}catch(n){console.warn("Erreur avec l'IA locale, utilisation de l'API Gemini Cloud:",n);const r=`Traduis le texte suivant en ${t}. Ne fournis que la traduction, sans aucune explication ou phrase d'introduction.

Texte:
"${a}"`;return d(r)}}export{d as c,l as t};
